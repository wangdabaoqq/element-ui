{"remainingRequest":"/Users/wangkai/github/Vue-Giant-Tree/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangkai/github/Vue-Giant-Tree/node_modules/element-ui/packages/checkbox/src/checkbox-group.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangkai/github/Vue-Giant-Tree/node_modules/element-ui/packages/checkbox/src/checkbox-group.vue","mtime":1576565416875},{"path":"/Users/wangkai/github/Vue-Giant-Tree/node_modules/cache-loader/dist/cjs.js","mtime":1571627676032},{"path":"/Users/wangkai/github/Vue-Giant-Tree/node_modules/babel-loader/lib/index.js","mtime":1571627672070},{"path":"/Users/wangkai/github/Vue-Giant-Tree/node_modules/cache-loader/dist/cjs.js","mtime":1571627676032},{"path":"/Users/wangkai/github/Vue-Giant-Tree/node_modules/vue-loader/lib/index.js","mtime":1573033317449}],"contextDependencies":[],"result":["\nimport Emitter from 'element-ui/src/mixins/emitter';\n\nexport default {\n  name: 'ElCheckboxGroup',\n\n  componentName: 'ElCheckboxGroup',\n\n  mixins: [Emitter],\n\n  inject: {\n    elFormItem: {\n      default: ''\n    }\n  },\n\n  props: {\n    value: {},\n    disabled: Boolean,\n    min: Number,\n    max: Number,\n    size: String,\n    fill: String,\n    textColor: String\n  },\n\n  computed: {\n    _elFormItemSize() {\n      return (this.elFormItem || {}).elFormItemSize;\n    },\n    checkboxGroupSize() {\n      return this.size || this._elFormItemSize || (this.$ELEMENT || {}).size;\n    }\n  },\n\n  watch: {\n    value(value) {\n      this.dispatch('ElFormItem', 'el.form.change', [value]);\n    }\n  }\n};\n",{"version":3,"sources":["checkbox-group.vue"],"names":[],"mappings":";AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"checkbox-group.vue","sourceRoot":"node_modules/element-ui/packages/checkbox/src","sourcesContent":["<script>\n  import Emitter from 'element-ui/src/mixins/emitter';\n\n  export default {\n    name: 'ElCheckboxGroup',\n\n    componentName: 'ElCheckboxGroup',\n\n    mixins: [Emitter],\n\n    inject: {\n      elFormItem: {\n        default: ''\n      }\n    },\n\n    props: {\n      value: {},\n      disabled: Boolean,\n      min: Number,\n      max: Number,\n      size: String,\n      fill: String,\n      textColor: String\n    },\n\n    computed: {\n      _elFormItemSize() {\n        return (this.elFormItem || {}).elFormItemSize;\n      },\n      checkboxGroupSize() {\n        return this.size || this._elFormItemSize || (this.$ELEMENT || {}).size;\n      }\n    },\n\n    watch: {\n      value(value) {\n        this.dispatch('ElFormItem', 'el.form.change', [value]);\n      }\n    }\n  };\n</script>\n\n<template>\n  <div class=\"el-checkbox-group\" role=\"group\" aria-label=\"checkbox-group\">\n    <slot></slot>\n  </div>\n</template>\n"]}]}