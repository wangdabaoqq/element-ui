{"remainingRequest":"/Users/wangkai/github/Vue-Giant-Tree/node_modules/babel-loader/lib/index.js!/Users/wangkai/github/Vue-Giant-Tree/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangkai/github/Vue-Giant-Tree/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangkai/github/Vue-Giant-Tree/node_modules/element-ui/packages/checkbox/src/checkbox-group.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangkai/github/Vue-Giant-Tree/node_modules/element-ui/packages/checkbox/src/checkbox-group.vue","mtime":1576565416875},{"path":"/Users/wangkai/github/Vue-Giant-Tree/node_modules/cache-loader/dist/cjs.js","mtime":1571627676032},{"path":"/Users/wangkai/github/Vue-Giant-Tree/node_modules/babel-loader/lib/index.js","mtime":1571627672070},{"path":"/Users/wangkai/github/Vue-Giant-Tree/node_modules/cache-loader/dist/cjs.js","mtime":1571627676032},{"path":"/Users/wangkai/github/Vue-Giant-Tree/node_modules/vue-loader/lib/index.js","mtime":1573033317449}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport Emitter from 'element-ui/src/mixins/emitter';\nexport default {\n  name: 'ElCheckboxGroup',\n  componentName: 'ElCheckboxGroup',\n  mixins: [Emitter],\n  inject: {\n    elFormItem: {\n      default: ''\n    }\n  },\n  props: {\n    value: {},\n    disabled: Boolean,\n    min: Number,\n    max: Number,\n    size: String,\n    fill: String,\n    textColor: String\n  },\n  computed: {\n    _elFormItemSize: function _elFormItemSize() {\n      return (this.elFormItem || {}).elFormItemSize;\n    },\n    checkboxGroupSize: function checkboxGroupSize() {\n      return this.size || this._elFormItemSize || (this.$ELEMENT || {}).size;\n    }\n  },\n  watch: {\n    value: function value(_value) {\n      this.dispatch('ElFormItem', 'el.form.change', [_value]);\n    }\n  }\n};",{"version":3,"sources":["checkbox-group.vue"],"names":[],"mappings":";AACA,OAAA,OAAA,MAAA,+BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,iBADA;AAGA,EAAA,aAAA,EAAA,iBAHA;AAKA,EAAA,MAAA,EAAA,CAAA,OAAA,CALA;AAOA,EAAA,MAAA,EAAA;AACA,IAAA,UAAA,EAAA;AACA,MAAA,OAAA,EAAA;AADA;AADA,GAPA;AAaA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA,EADA;AAEA,IAAA,QAAA,EAAA,OAFA;AAGA,IAAA,GAAA,EAAA,MAHA;AAIA,IAAA,GAAA,EAAA,MAJA;AAKA,IAAA,IAAA,EAAA,MALA;AAMA,IAAA,IAAA,EAAA,MANA;AAOA,IAAA,SAAA,EAAA;AAPA,GAbA;AAuBA,EAAA,QAAA,EAAA;AACA,IAAA,eADA,6BACA;AACA,aAAA,CAAA,KAAA,UAAA,IAAA,EAAA,EAAA,cAAA;AACA,KAHA;AAIA,IAAA,iBAJA,+BAIA;AACA,aAAA,KAAA,IAAA,IAAA,KAAA,eAAA,IAAA,CAAA,KAAA,QAAA,IAAA,EAAA,EAAA,IAAA;AACA;AANA,GAvBA;AAgCA,EAAA,KAAA,EAAA;AACA,IAAA,KADA,iBACA,MADA,EACA;AACA,WAAA,QAAA,CAAA,YAAA,EAAA,gBAAA,EAAA,CAAA,MAAA,CAAA;AACA;AAHA;AAhCA,CAAA","sourcesContent":["<script>\n  import Emitter from 'element-ui/src/mixins/emitter';\n\n  export default {\n    name: 'ElCheckboxGroup',\n\n    componentName: 'ElCheckboxGroup',\n\n    mixins: [Emitter],\n\n    inject: {\n      elFormItem: {\n        default: ''\n      }\n    },\n\n    props: {\n      value: {},\n      disabled: Boolean,\n      min: Number,\n      max: Number,\n      size: String,\n      fill: String,\n      textColor: String\n    },\n\n    computed: {\n      _elFormItemSize() {\n        return (this.elFormItem || {}).elFormItemSize;\n      },\n      checkboxGroupSize() {\n        return this.size || this._elFormItemSize || (this.$ELEMENT || {}).size;\n      }\n    },\n\n    watch: {\n      value(value) {\n        this.dispatch('ElFormItem', 'el.form.change', [value]);\n      }\n    }\n  };\n</script>\n\n<template>\n  <div class=\"el-checkbox-group\" role=\"group\" aria-label=\"checkbox-group\">\n    <slot></slot>\n  </div>\n</template>\n"],"sourceRoot":"node_modules/element-ui/packages/checkbox/src"}]}