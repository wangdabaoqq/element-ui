{"remainingRequest":"/Users/wangkai/github/Vue-Giant-Tree/node_modules/babel-loader/lib/index.js!/Users/wangkai/github/Vue-Giant-Tree/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangkai/github/Vue-Giant-Tree/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangkai/github/Vue-Giant-Tree/src/components/setList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangkai/github/Vue-Giant-Tree/src/components/setList.vue","mtime":1579170252885},{"path":"/Users/wangkai/github/Vue-Giant-Tree/node_modules/cache-loader/dist/cjs.js","mtime":1571627676032},{"path":"/Users/wangkai/github/Vue-Giant-Tree/node_modules/babel-loader/lib/index.js","mtime":1571627672070},{"path":"/Users/wangkai/github/Vue-Giant-Tree/node_modules/cache-loader/dist/cjs.js","mtime":1571627676032},{"path":"/Users/wangkai/github/Vue-Giant-Tree/node_modules/vue-loader/lib/index.js","mtime":1573033317449}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.freeze\";\n//\n//\n//\n//\n//\n//\nvar keyCode = Object.freeze({\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n});\nexport default {\n  name: 'ElRadioGroup',\n  componentName: 'ElRadioGroup',\n  inject: {\n    elFormItem: {\n      default: ''\n    }\n  },\n  // mixins: [Emitter],\n  props: {\n    value: {},\n    size: String,\n    fill: String,\n    textColor: String,\n    disabled: Boolean\n  },\n  computed: {\n    _elFormItemSize: function _elFormItemSize() {\n      return (this.elFormItem || {}).elFormItemSize;\n    },\n    _elTag: function _elTag() {\n      return (this.$vnode.data || {}).tag || 'div';\n    },\n    radioGroupSize: function radioGroupSize() {\n      return this.size || this._elFormItemSize || (this.$ELEMENT || {}).size;\n    }\n  },\n  created: function created() {\n    var _this = this;\n\n    this.$on('handleChange', function (value) {\n      // console.log(124111)\n      _this.$emit('change', value);\n    });\n  },\n  mounted: function mounted() {\n    // 当radioGroup没有默认选项时，第一个可以选中Tab导航\n    var radios = this.$el.querySelectorAll('[type=radio]');\n    var firstLabel = this.$el.querySelectorAll('[role=radio]')[0];\n\n    if (![].some.call(radios, function (radio) {\n      return radio.checked;\n    }) && firstLabel) {\n      firstLabel.tabIndex = 0;\n    }\n  },\n  methods: {\n    handleKeydown: function handleKeydown(e) {\n      // 左右上下按键 可以在radio组内切换不同选项\n      var target = e.target;\n      var className = target.nodeName === 'INPUT' ? '[type=radio]' : '[role=radio]';\n      var radios = this.$el.querySelectorAll(className);\n      var length = radios.length;\n      var index = [].indexOf.call(radios, target);\n      var roleRadios = this.$el.querySelectorAll('[role=radio]');\n\n      switch (e.keyCode) {\n        case keyCode.LEFT:\n        case keyCode.UP:\n          e.stopPropagation();\n          e.preventDefault();\n\n          if (index === 0) {\n            roleRadios[length - 1].click();\n            roleRadios[length - 1].focus();\n          } else {\n            roleRadios[index - 1].click();\n            roleRadios[index - 1].focus();\n          }\n\n          break;\n\n        case keyCode.RIGHT:\n        case keyCode.DOWN:\n          if (index === length - 1) {\n            e.stopPropagation();\n            e.preventDefault();\n            roleRadios[0].click();\n            roleRadios[0].focus();\n          } else {\n            roleRadios[index + 1].click();\n            roleRadios[index + 1].focus();\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    }\n  },\n  watch: {\n    value: function value() {\n      this.dispatch('ElFormItem', 'el.form.change', [this.value]);\n    }\n  }\n};",{"version":3,"sources":["setList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <slot></slot>\n    <a></a>\n  </div>\n</template>\n<script>\n const keyCode = Object.freeze({\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40\n  });\nexport default {\n    name: 'ElRadioGroup',\n\n    componentName: 'ElRadioGroup',\n\n    inject: {\n      elFormItem: {\n        default: ''\n      }\n    },\n\n    // mixins: [Emitter],\n\n    props: {\n      value: {},\n      size: String,\n      fill: String,\n      textColor: String,\n      disabled: Boolean\n    },\n\n    computed: {\n      _elFormItemSize() {\n        return (this.elFormItem || {}).elFormItemSize;\n      },\n      _elTag() {\n        return (this.$vnode.data || {}).tag || 'div';\n      },\n      radioGroupSize() {\n        return this.size || this._elFormItemSize || (this.$ELEMENT || {}).size;\n      }\n    },\n\n    created() {\n      this.$on('handleChange', value => {\n        // console.log(124111)\n        this.$emit('change', value);\n      });\n    },\n    mounted() {\n      // 当radioGroup没有默认选项时，第一个可以选中Tab导航\n      const radios = this.$el.querySelectorAll('[type=radio]');\n      const firstLabel = this.$el.querySelectorAll('[role=radio]')[0];\n      if (![].some.call(radios, radio => radio.checked) && firstLabel) {\n        firstLabel.tabIndex = 0;\n      }\n    },\n    methods: {\n      handleKeydown(e) { // 左右上下按键 可以在radio组内切换不同选项\n        const target = e.target;\n        const className = target.nodeName === 'INPUT' ? '[type=radio]' : '[role=radio]';\n        const radios = this.$el.querySelectorAll(className);\n        const length = radios.length;\n        const index = [].indexOf.call(radios, target);\n        const roleRadios = this.$el.querySelectorAll('[role=radio]');\n        switch (e.keyCode) {\n          case keyCode.LEFT:\n          case keyCode.UP:\n            e.stopPropagation();\n            e.preventDefault();\n            if (index === 0) {\n              roleRadios[length - 1].click();\n              roleRadios[length - 1].focus();\n            } else {\n              roleRadios[index - 1].click();\n              roleRadios[index - 1].focus();\n            }\n            break;\n          case keyCode.RIGHT:\n          case keyCode.DOWN:\n            if (index === (length - 1)) {\n              e.stopPropagation();\n              e.preventDefault();\n              roleRadios[0].click();\n              roleRadios[0].focus();\n            } else {\n              roleRadios[index + 1].click();\n              roleRadios[index + 1].focus();\n            }\n            break;\n          default:\n            break;\n        }\n      }\n    },\n    watch: {\n      value() {\n        this.dispatch('ElFormItem', 'el.form.change', [this.value]);\n      }\n    }\n  };\n</script>\n\n<style>\n\n</style>\n"],"sourceRoot":"src/components"}]}